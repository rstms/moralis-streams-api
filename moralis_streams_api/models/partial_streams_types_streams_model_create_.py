# coding: utf-8

"""
    Streams Api

    API that provides access to Moralis Streams  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PartialStreamsTypesStreamsModelCreate_(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'webhook_url': 'str',
        'description': 'str',
        'tag': 'str',
        'topic0': 'list[str]',
        'all_addresses': 'bool',
        'include_native_txs': 'bool',
        'include_contract_logs': 'bool',
        'include_internal_txs': 'bool',
        'abi': 'list[StreamsAbi]',
        'advanced_options': 'list[AdvancedOptions]',
        'chain_ids': 'list[str]'
    }

    attribute_map = {
        'webhook_url': 'webhookUrl',
        'description': 'description',
        'tag': 'tag',
        'topic0': 'topic0',
        'all_addresses': 'allAddresses',
        'include_native_txs': 'includeNativeTxs',
        'include_contract_logs': 'includeContractLogs',
        'include_internal_txs': 'includeInternalTxs',
        'abi': 'abi',
        'advanced_options': 'advancedOptions',
        'chain_ids': 'chainIds'
    }

    def __init__(self, webhook_url=None, description=None, tag=None, topic0=None, all_addresses=None, include_native_txs=None, include_contract_logs=None, include_internal_txs=None, abi=None, advanced_options=None, chain_ids=None):  # noqa: E501
        """PartialStreamsTypesStreamsModelCreate_ - a model defined in Swagger"""  # noqa: E501
        self._webhook_url = None
        self._description = None
        self._tag = None
        self._topic0 = None
        self._all_addresses = None
        self._include_native_txs = None
        self._include_contract_logs = None
        self._include_internal_txs = None
        self._abi = None
        self._advanced_options = None
        self._chain_ids = None
        self.discriminator = None
        if webhook_url is not None:
            self.webhook_url = webhook_url
        if description is not None:
            self.description = description
        if tag is not None:
            self.tag = tag
        if topic0 is not None:
            self.topic0 = topic0
        if all_addresses is not None:
            self.all_addresses = all_addresses
        if include_native_txs is not None:
            self.include_native_txs = include_native_txs
        if include_contract_logs is not None:
            self.include_contract_logs = include_contract_logs
        if include_internal_txs is not None:
            self.include_internal_txs = include_internal_txs
        if abi is not None:
            self.abi = abi
        if advanced_options is not None:
            self.advanced_options = advanced_options
        if chain_ids is not None:
            self.chain_ids = chain_ids

    @property
    def webhook_url(self):
        """Gets the webhook_url of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501

        Webhook URL where moralis will send the POST request.  # noqa: E501

        :return: The webhook_url of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :rtype: str
        """
        return self._webhook_url

    @webhook_url.setter
    def webhook_url(self, webhook_url):
        """Sets the webhook_url of this PartialStreamsTypesStreamsModelCreate_.

        Webhook URL where moralis will send the POST request.  # noqa: E501

        :param webhook_url: The webhook_url of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :type: str
        """

        self._webhook_url = webhook_url

    @property
    def description(self):
        """Gets the description of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501

        A description for this stream  # noqa: E501

        :return: The description of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PartialStreamsTypesStreamsModelCreate_.

        A description for this stream  # noqa: E501

        :param description: The description of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def tag(self):
        """Gets the tag of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501

        A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present  # noqa: E501

        :return: The tag of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this PartialStreamsTypesStreamsModelCreate_.

        A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present  # noqa: E501

        :param tag: The tag of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :type: str
        """

        self._tag = tag

    @property
    def topic0(self):
        """Gets the topic0 of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501

        An Array of topic0's in hex, required if the type : log  # noqa: E501

        :return: The topic0 of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :rtype: list[str]
        """
        return self._topic0

    @topic0.setter
    def topic0(self, topic0):
        """Sets the topic0 of this PartialStreamsTypesStreamsModelCreate_.

        An Array of topic0's in hex, required if the type : log  # noqa: E501

        :param topic0: The topic0 of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :type: list[str]
        """

        self._topic0 = topic0

    @property
    def all_addresses(self):
        """Gets the all_addresses of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501

        Include events for all addresses (only applied when abi and topic0 is provided)  # noqa: E501

        :return: The all_addresses of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :rtype: bool
        """
        return self._all_addresses

    @all_addresses.setter
    def all_addresses(self, all_addresses):
        """Sets the all_addresses of this PartialStreamsTypesStreamsModelCreate_.

        Include events for all addresses (only applied when abi and topic0 is provided)  # noqa: E501

        :param all_addresses: The all_addresses of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :type: bool
        """

        self._all_addresses = all_addresses

    @property
    def include_native_txs(self):
        """Gets the include_native_txs of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501

        Include or not native transactions defaults to false (only applied when type:contract)  # noqa: E501

        :return: The include_native_txs of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :rtype: bool
        """
        return self._include_native_txs

    @include_native_txs.setter
    def include_native_txs(self, include_native_txs):
        """Sets the include_native_txs of this PartialStreamsTypesStreamsModelCreate_.

        Include or not native transactions defaults to false (only applied when type:contract)  # noqa: E501

        :param include_native_txs: The include_native_txs of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :type: bool
        """

        self._include_native_txs = include_native_txs

    @property
    def include_contract_logs(self):
        """Gets the include_contract_logs of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501

        Include or not logs of contract interactions defaults to false  # noqa: E501

        :return: The include_contract_logs of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :rtype: bool
        """
        return self._include_contract_logs

    @include_contract_logs.setter
    def include_contract_logs(self, include_contract_logs):
        """Sets the include_contract_logs of this PartialStreamsTypesStreamsModelCreate_.

        Include or not logs of contract interactions defaults to false  # noqa: E501

        :param include_contract_logs: The include_contract_logs of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :type: bool
        """

        self._include_contract_logs = include_contract_logs

    @property
    def include_internal_txs(self):
        """Gets the include_internal_txs of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501

        Include or not include internal transactions defaults to false  # noqa: E501

        :return: The include_internal_txs of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :rtype: bool
        """
        return self._include_internal_txs

    @include_internal_txs.setter
    def include_internal_txs(self, include_internal_txs):
        """Sets the include_internal_txs of this PartialStreamsTypesStreamsModelCreate_.

        Include or not include internal transactions defaults to false  # noqa: E501

        :param include_internal_txs: The include_internal_txs of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :type: bool
        """

        self._include_internal_txs = include_internal_txs

    @property
    def abi(self):
        """Gets the abi of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501


        :return: The abi of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :rtype: list[StreamsAbi]
        """
        return self._abi

    @abi.setter
    def abi(self, abi):
        """Sets the abi of this PartialStreamsTypesStreamsModelCreate_.


        :param abi: The abi of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :type: list[StreamsAbi]
        """

        self._abi = abi

    @property
    def advanced_options(self):
        """Gets the advanced_options of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501


        :return: The advanced_options of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :rtype: list[AdvancedOptions]
        """
        return self._advanced_options

    @advanced_options.setter
    def advanced_options(self, advanced_options):
        """Sets the advanced_options of this PartialStreamsTypesStreamsModelCreate_.


        :param advanced_options: The advanced_options of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :type: list[AdvancedOptions]
        """

        self._advanced_options = advanced_options

    @property
    def chain_ids(self):
        """Gets the chain_ids of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501

        The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]  # noqa: E501

        :return: The chain_ids of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :rtype: list[str]
        """
        return self._chain_ids

    @chain_ids.setter
    def chain_ids(self, chain_ids):
        """Sets the chain_ids of this PartialStreamsTypesStreamsModelCreate_.

        The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]  # noqa: E501

        :param chain_ids: The chain_ids of this PartialStreamsTypesStreamsModelCreate_.  # noqa: E501
        :type: list[str]
        """

        self._chain_ids = chain_ids

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PartialStreamsTypesStreamsModelCreate_, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PartialStreamsTypesStreamsModelCreate_):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
